apiVersion: apps/v1
kind: Deployment
metadata:
  name: busybox
  namespace: default
spec:
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/agent-inject-token: "true"
        vault.hashicorp.com/template-static-secret-render-interval: 10s
        vault.hashicorp.com/secret-volume-path: "/home/nonroot"
        vault.hashicorp.com/agent-inject-secret-config: "${vault-secret-mount}/data/${vault-secret-path}"
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "${vault-secret-mount}/data/${vault-secret-path}" -}}
          export MONGO_SERVER_URL="mongodb://{{ .Data.data.username }}:{{ .Data.data.password }}@some.mongodb.server"
          {{- end -}}
        vault.hashicorp.com/role: "${vault-role}"
        vault.hashicorp.com/agent-run-as-user: "65532"
        vault.hashicorp.com/agent-run-as-group: "65532"
    spec:
      serviceAccountName: vault-auth
      containers:
      - name: busybox
        image: cgr.dev/chainguard/busybox
        command:
        - /bin/sh
        - -ec
        args:
        - ln -sf /home/nonroot/token /home/nonroot/.vault-token && source /home/nonroot/config && sleep infinity
        env:
        - name: CSI_SECRET_USER
          valueFrom:
            secretKeyRef:
              name: csi-secret
              key: username
        - name: CSI_SECRET_PASS
          valueFrom:
            secretKeyRef:
              name: csi-secret
              key: password
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: k8s-secret-volume
          mountPath: /mnt/secret
          readOnly: true
        - name: k8s-secret-volume
          mountPath: /mnt/secret-subpath
          subPath: ${secret-url}
          readOnly: true
        - name: csi-volume
          mountPath: /mnt/csi
          readOnly: true
      volumes:
      - name: k8s-secret-volume
        secret:
          secretName: ${secret-name}
      - name: csi-volume
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: ${csi-spc-name}
